<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo博客搭建笔记]]></title>
    <url>%2F2017%2F12%2F17%2FHexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[多年的老年人间接性选择失忆综合症治疗笔记 前前后后捣鼓 Hexo+next+github 也有一小段时间了。折腾来折腾去也算花了些心力，为了怕多年的间接性选择失忆综合症（开玩笑）再犯，在此记录下相关的操作步骤。（本文中的操作全在 Win10 下实现）。 本站配置 各项版本: 12345678910111213141516hexo: 3.4.2hexo-cli: 1.0.4os: Windows_NT 10.0.15063 win32 x64http_parser: 2.7.0node: 8.9.3v8: 6.1.534.48uv: 1.15.0zlib: 1.2.11ares: 1.10.1-DEVmodules: 57nghttp2: 1.25.0openssl: 1.0.2nicu: 59.1unicode: 9.0cldr: 31.0.1tz: 2017b 功能组件: Github Page 文章加密访问功能 页面顶部加载条功能 集成 leancloud 文章阅读量统计功能 源代码压缩功能 阅读排行Top10统计功能 Gitment 评论系统 (原先使用来必力,发现不太和我口味,当然来必力也很好用) 本地搜索功能 准备工作 下载安装 node.js 官网下载 默认会安装 npm 下载安装 git 官网下载 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。 在本地搭建Hexo静态博客12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server 完成上述操作浏览器访问 http://localhost:4000/ 访问正常即创建成功。 配置Github Page 登录Github 创建一个新的项目(Start a project),命名为 yourgithubname.github.io 我的是 eibitme.github.io yourgithubname 是的你的Github账号名称。 如果你还没有Github账号,请自行注册一个,在这里就不做演示了。 将本地博客与 Github Page 关联 进入本地博客更目录使用文本编辑器编辑 _config.yml站点配置文件 中的 deploy。 1234deploy: type: git repository: https://github.com/eibitme/eibitme.github.io.git branch: master 运行: npm install hexo-deployer-git --save （安装hexo git相关） 运行: hexo g （本地生成静态文件） 运行: hexo d （将本地静态文件推送至Github） 浏览器访问 https://eibitme.github.io/ 则可以看到你滴Blog了，惊不惊喜？意不意外？ 基本信息设置在根目录下的 _config.yml 站点配置文件 文件中，可以修改标题，作者等信息。打开编辑该文件，注意：每一个值的冒号后面都有一个半角空格！ 捣鼓本博客采用了 hexo-theme-next 本文内容均已 hexo-theme-next 为例。进入 blog 根目录执行以下操作： 下载主题: 1git clone https://github.com/iissnan/hexo-theme-next themes/next 打开 _config.yml 站点配置文件，将themes修改为next 运行:123hexo cleanhexo ghexo d 想了解其他 hexo 主题，请访问： 主题列表 想知道关于 next 主题，更多的配置，请参考：Next主题配置 在文章底部增加版权信息编辑 主题配置文件 搜索 post_copyright, 将 enable: false 修改为 true1234post_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/ 修改默认 _post 文章的md文件选项在/scaffolds/post.md文件中添加：123456789---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories: copyright: truecomments: truepassword:--- 对网页底部进行修改编辑 主题配置文件 搜索 footer 修改其中的 theme 选项:12345theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false 文章加密访问打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在meta标签后面插入这样一段代码： 12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 然后文章中添加: 1password: password 添加顶部加载条打开/themes/next/layout/_partials/head.swig文件，在maximum-scale=1”/&gt;后添加如下代码: 12&lt;script src="//cdn.bootcss.com/pace/1.0.2/pace.min.js"&gt;&lt;/script&gt;&lt;link href="//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css" rel="stylesheet"&gt; 但是，默认的是粉色的，要改变颜色可以在/themes/next/layout/_partials/head.swig文件中添加如下代码（接在刚才link的后面） 12345678910111213&lt;style&gt; .pace .pace-progress &#123; background: #1E92FB; /*进度条颜色*/ height: 3px; &#125; .pace .pace-progress-inner &#123; box-shadow: 0 0 10px #1E92FB, 0 0 5px #1E92FB; /*阴影颜色*/ &#125; .pace .pace-activity &#123; border-top-color: #1E92FB; /*上边框颜色*/ border-left-color: #1E92FB; /*左边框颜色*/ &#125;&lt;/style&gt; 集成 leancloud &amp;&amp; 添加热度集成 leancloud 为NexT主题添加文章阅读量统计功能next主题集成leanCloud，打开/themes/next/layout/_macro/post.swig 在”leancloud-visitors-count”&gt; span 标签后面添加℃。 修改 &lt;span class=&quot;post-meta-item-icon&quot;&gt; 里的 i 标签图标为 &lt;i class=&quot;fa fa-thermometer-three-quarters&quot;&gt;&lt;/i&gt; 然后打开，/themes/next/languages/zh-Hans.yml，将visitors内容改为热度即可。 修改 tag 标签的 # 开头修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 修改文章内超链接文本样式将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。找到文件 themes\next\source\css_custom\custom.styl ，添加如下 css 样式： 12345678.post-body p a &#123; color: #0593d3; border-bottom: none; &amp;:hover &#123; color: #0477ab; text-decoration: underline; &#125;&#125; 博文压缩在站点的根目录下执行以下命令： 12npm install gulp -gnpm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save 在博客根目录下新建 gulpfile.js ，并填入以下内容： 123456789101112131415161718192021222324252627282930313233var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');// 压缩 public 目录 cssgulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);// 压缩 public 目录 htmlgulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 压缩 public/js 目录 jsgulp.task('minify-js', function() &#123; return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);// 执行 gulp 命令时执行的任务gulp.task('default', [ 'minify-html','minify-css','minify-js']); 生成博文是执行 hexo g &amp;&amp; gulp 就会根据 gulpfile.js 中的配置，对 public 目录中的静态资源文件进行压缩。 搜索功能 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令: 1npm install hexo-generator-searchdb --save 编辑 站点配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 编辑 主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 增加阅读排行统计页面首先我们可以使用leancloud来统计页面阅读数量，以及储存这些信息，然后通过leancloud提供的api编写js脚本来获取阅读数量信息，并展示在页面上。首先新建一个page页面，hexo new page “topten”,然后编辑此.md文件，写下：12345678910111213141516171819202122232425&lt;div id="Top10"&gt;&lt;/div&gt;&lt;script src="https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js"&gt;&lt;/script&gt;&lt;script&gt;AV.initialize("", ""); //需要写上leancloud的key&lt;/script&gt;&lt;script type="text/javascript"&gt; var time=0 var title="" var url="" var query = new AV.Query('Counter');//表名 query.notEqualTo('id',0); //id不为0的结果 query.descending('time'); //结果按阅读次数降序排序 query.limit(20); //最终只返回10条结果 query.find().then(function (todo) &#123; for (var i=0;i&lt;10;i++)&#123; var result=todo[i].attributes; time=result.time; //阅读次数 title=result.title; //文章标题 url=result.url; //文章url var content="&lt;p&gt;"+"&lt;font color='#0477ab'&gt;"+"【阅读次数:"+time+"】"+"&lt;a href='"+"http://thief.one"+url+"'&gt;"+title+"&lt;/font&gt;"+"&lt;/a&gt;"+"&lt;/p&gt;"; // document.write("&lt;a href='"+"http://thief.one/"+url+"'&gt;"+title+"&lt;/a&gt;"+" Readtimes:"+time+"&lt;br&gt;"); document.getElementById("Top10").innerHTML+=content &#125; &#125;, function (error) &#123; console.log("error"); &#125;);&lt;/script&gt; 添加 来必力 评论系统 (本站并不使用此功能)登录 来必力 获取你的 LiveRe UID。 编辑 主题配置文件， 编辑 livere_uid 字段，设置如下：1livere_uid: #your livere_uid 使用 Gitment 做评论系统 (本站所使用)在来必力的使用期间,发现这玩意有点卡卡的,emmm…可能是我自己的问题吧,总之我更换了个人认为更为方便的 gitment 。 Gitment 简介Gitment 是作者实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。 项目地址: gitment Demo Page: Demo 使用方法1.注册 OAuth Application点击此处 来注册一个新的 OAuth Application。其他内容可以随意填写，但要确保填入正确的 callback URL（一般是评论页面对应的域名，如 https://eibitme.github.io）。 2.修改 主题配置文件 gitment 配置以下几项123456gitment: enable: true github_user: *Your Github ID* github_repo: *The repo you use to store Gitment comments* client_id: *Github client id for the Gitment* client_secret: *Github access secret token for the Gitment* 使用 Hexo Admin 编辑 markdown 文章项目地址: Hexo Admin Demo: Hexo Admin Demo Quickstart:123npm install --save hexo-adminhexo server -dopen http://localhost:4000/admin/ 参考文章https://thief.one/2017/03/03/Hexo搭建博客教程/]]></content>
      <categories>
        <category>技术研究笔记</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
